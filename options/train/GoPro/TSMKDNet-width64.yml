# ------------------------------------------------------------------------
# Copyright (c) 2022 megvii-model. All Rights Reserved.
# ------------------------------------------------------------------------
# Modified from BasicSR (https://github.com/xinntao/BasicSR)
# Copyright 2018-2020 BasicSR Authors
# ------------------------------------------------------------------------
# general settings
name: Sub_ablation_v5_addinter
model_type: ImageRestorationModel
scale: 1
num_gpu: 2
manual_seed: 42

datasets:
  train:
    name: gopro-train
    type: PairedImageDataset
    dataroot_gt: ./datasets/GoPro/train/sharp_crops.lmdb
    dataroot_lq: ./datasets/GoPro/train/blur_crops.lmdb
    filename_tmpl: '{}'
    io_backend:
      type: lmdb
  # train:
  #   name: RealBlurR-train
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/RealBlur/RealBlur-R/train/sharp_crops
  #   dataroot_lq: datasets/RealBlur/RealBlur-R/train/blur_crops
  #   filename_tmpl: '{}'
  #   io_backend:
  #     type: disk

    gt_size: 256

    random_crop: false
    use_psnr_crop: true
    
    use_vflip: true
    use_hflip: true
    use_rot: false
    
    is_pretrain: False
    is_freeze: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 2
    batch_size_per_gpu: 4
    grad_accumulation_steps: 2
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # val:
  #   name: RealBlur-test
  #   type: PairedImageDataset
  #   dataroot_gt: ./datasets/RealBlur/RealBlur-R/test/sharp
  #   dataroot_lq: ./datasets/RealBlur/RealBlur-R/test/blur
  #   crop_size: 512
  #   io_backend:
  #     type: disk
  val:
    name: GoPro-test
    type: PairedImageDataset
    dataroot_gt: ./datasets/GoPro/test/target.lmdb
    dataroot_lq: ./datasets/GoPro/test/input.lmdb
    io_backend:
      type: lmdb

network_g:
  type: TSMKDNet_Local
  ufp_pretrain: True # False = NAFNet
  patch_size: 64
  width: 64
  first_enc_blk_nums: [1, 1, 1, 28]
  first_middle_blk_num: 1
  first_dec_blk_nums: [1, 1, 1, 1]

  second_enc_blk_nums: [1, 1, 1, 4]
  second_dec_blk_nums: [4, 1, 1, 1]

# path experiments/TSMKD_fftloss_psnrcorp_FB/models/net_g_latest.pth
path:
  pretrain_network_g: ~ #experiments/Ours_Base/models/net_g_latest.pth
  strict_load_g: true
  resume_state: ~
  freeze_network_g: net_g_latest.pth

# training settings
train:
  optim_g:
    type: AdamW
    lr: !!float 1e-3
    weight_decay: !!float 1e-3
    betas: [0.9, 0.9]

  scheduler:
    type: TrueCosineAnnealingLR
    T_max: 400000
    eta_min: !!float 1e-6

  total_iter: 400000
  warmup_iter: -1

  # losses
  fir_pixel_opt:
    type: PSNRLoss
    loss_weight: 0.01
    reduction: mean

  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  fft_loss_opt:
    type: FFTLoss
    loss_weight: 0.1
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e5
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
  find_unused_parameters: false